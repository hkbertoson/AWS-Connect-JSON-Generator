---
export interface Props {
	variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger';
	size?: 'sm' | 'md' | 'lg';
	type?: 'button' | 'submit' | 'reset';
	disabled?: boolean;
	ariaLabel?: string;
	id?: string;
	class?: string;
}

const {
	variant = 'primary',
	size = 'md',
	type = 'button',
	disabled = false,
	ariaLabel,
	id,
	class: className = '',
} = Astro.props;

const baseClasses =
	'inline-flex items-center justify-center font-medium rounded focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed';

const variantClasses = {
	primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
	secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',
	success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',
	warning: 'bg-yellow-500 text-white hover:bg-yellow-600 focus:ring-yellow-500',
	danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',
};

const sizeClasses = {
	sm: 'px-3 py-1.5 text-sm',
	md: 'px-4 py-2 text-sm',
	lg: 'px-6 py-3 text-base',
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

<button type={type} disabled={disabled} aria-label={ariaLabel} id={id} class={classes}>
	<slot />
</button>
